{"version":3,"sources":["components/Form/Form.module.css","components/Filter/Filter.module.css","components/Contact/Contact.module.css","components/ContactsList/ContactsList.module.css","components/App/App.module.css","components/Container/Container.module.css","redux/Phonebook/phonebook-actions.js","redux/Phonebook/phonebook-reduser.js","redux/store.js","components/Container/Container.js","redux/Phonebook/phonebook-selectors.js","components/Form/Form.js","components/Filter/Filter.js","components/Contact/Contact.js","components/ContactsList/ContactsList.js","components/App/App.js","index.js"],"names":["module","exports","actions","addContact","createAction","payload","name","number","id","uuidv4","deleteContact","changeFilter","contactsState","JSON","parse","localStorage","getItem","initialContacts","contacts","createReducer","state","some","toLowerCase","alert","filter","_","phonebookReducer","combineReducers","store","configureStore","reducer","phonebook","Container","children","className","s","container","getContacts","getFilter","getFiltredContacts","lowerCasedFilter","includes","Form","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleInputChange","e","target","value","reset","form","onSubmit","preventDefault","element","label","onChange","input","type","pattern","title","required","button","btnText","Filter","text","currentTarget","Contact","propType","PropTypes","string","isRequired","ContactsList","useEffect","window","setItem","stringify","map","item","onClick","App","contactTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1adbf99.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2VHn1\",\"label\":\"Form_label__1Du1J\",\"input\":\"Form_input__2XPkp\",\"button\":\"Form_button__DdiDB\",\"btnText\":\"Form_btnText__1XWEx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__BAiYD\",\"value\":\"Filter_value__2WEyA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Contact_name__3Kt8W\",\"number\":\"Contact_number__2BHeS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsList_item__Rb1R0\",\"button\":\"ContactsList_button__5iFBQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__3gDbG\",\"contactTitle\":\"App_contactTitle__29T5X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3IfuB\"};","import { v4 as uuidv4 } from 'uuid';\r\n// import { DELETE, SUBMIT, CHANGE_FILTER } from './phonebook-types';\r\n\r\n// export const addContact = (name, number) => ({\r\n//   type: SUBMIT,\r\n//   payload: {\r\n//     id: uuidv4(),\r\n//     name,\r\n//     number,\r\n//   },\r\n// });\r\n\r\n// export const deleteContact = contactId => ({\r\n//   type: DELETE,\r\n//   payload: contactId,\r\n// });\r\n\r\n// export const changeFilter = value => ({\r\n//   type: CHANGE_FILTER,\r\n//   payload: value,\r\n// });\r\n\r\n//reduxjs/toolkit\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/Add', ({ name, number }) => {\r\n  return {\r\n    payload: {\r\n      name,\r\n      number,\r\n      id: uuidv4(),\r\n    },\r\n  };\r\n});\r\n\r\nconst deleteContact = createAction('contacts/Delete');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst actions = { addContact, deleteContact, changeFilter };\r\n\r\nexport default actions;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport actions from './phonebook-actions';\r\nimport initialContacts from '../../contacts.json';\r\n// import { SUBMIT, DELETE, CHANGE_FILTER } from './phonebook-types';\r\n\r\n// const contacts = (state = initialContacts, { type, payload }) => {\r\n//   switch (type) {\r\n//     case SUBMIT:\r\n//       console.log(type, payload);\r\n//       return state.some(\r\n//         el => el.name.toLowerCase() === payload.name.toLowerCase(),\r\n//       )\r\n//         ? alert(`${payload.name} is already in the directory.`)\r\n//         : [...state, payload];\r\n\r\n//     case DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case CHANGE_FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n//reduxjs/Toolkit\r\n\r\nconst contactsState =\r\n  JSON.parse(localStorage.getItem('contacts')) ?? initialContacts;\r\n\r\nconst contacts = createReducer(contactsState, {\r\n  [actions.addContact]: (state, { payload }) =>\r\n    state.some(({ name }) => name.toLowerCase() === payload.name.toLowerCase())\r\n      ? alert(`${payload.name} is already in the directory.`)\r\n      : [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst phonebookReducer = combineReducers({ contacts, filter });\r\nexport default phonebookReducer;\r\n","//хранилище до toolkit\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport phonebookReducer from './Phonebook/phonebook-reduser';\r\nconst store = configureStore({\r\n  reducer: { phonebook: phonebookReducer },\r\n});\r\n// console.log(store.getState());\r\nexport default store;\r\n","import s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n","export const getContacts = state => state.phonebook.contacts;\r\nexport const getFilter = state => state.phonebook.filter;\r\nexport const getFiltredContacts = state => {\r\n  const lowerCasedFilter = getFilter(state).toLowerCase();\r\n  const filteredContacts = getContacts(state).filter(({ name }) =>\r\n    name.toLowerCase().includes(lowerCasedFilter),\r\n  );\r\n  return filteredContacts;\r\n};\r\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { v4 as uuidv4 } from 'uuid';\n// import { connect } from 'react-redux';\nimport { getContacts } from '../../redux/Phonebook/phonebook-selectors';\nimport actions from '../../redux/Phonebook/phonebook-actions';\nimport s from './Form.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  // console.log(contacts);\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const comparableElement = contacts.some(\n      element => element.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (comparableElement) {\n      reset();\n      return alert('contact is already in the directory');\n    }\n    dispatch(actions.addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          onChange={handleInputChange}\n          value={name}\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Phone\n        <input\n          value={number}\n          className={s.input}\n          onChange={handleInputChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        <span className={s.btnText}> Add contacts</span>\n      </button>\n    </form>\n  );\n}\n\n// Form.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getFilter } from '../../redux/Phonebook/phonebook-selectors';\nimport actions from '../../redux/Phonebook/phonebook-actions';\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChangeInput = e => {\n    dispatch(actions.changeFilter(e.currentTarget.value));\n  };\n  return (\n    <label className={s.text}>\n      Find contacts by name\n      <input\n        className={s.value}\n        type=\"text\"\n        value={filter}\n        onChange={onChangeInput}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport s from './Contact.module.css';\nexport default function Contact({ name, number }) {\n  return (\n    <>\n      <span className={s.name}>{name}:</span>\n      <span className={s.number}>{number}</span>\n    </>\n  );\n}\nContact.propType = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n};\n","// import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\n\nimport Contact from '../Contact';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFiltredContacts } from '../../redux/Phonebook/phonebook-selectors';\nimport actions from '../../redux/Phonebook/phonebook-actions';\nimport s from './ContactsList.module.css';\n\nexport default function ContactsList() {\n  const contacts = useSelector(getFiltredContacts);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <ul>\n      {contacts.map(({ name, number, id }) => (\n        <li className={s.item} key={id}>\n          <Contact name={name} number={number} />\n          <button\n            className={s.button}\n            type=\"button\"\n            onClick={() => dispatch(actions.deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n// ContactsList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.string.isRequired,\n//     }),\n//   ),\n//   onDeleteContact: PropTypes.func.isRequired,\n// };\n","// import { connect } from 'react-redux';\nimport Container from '../Container';\nimport Form from '../Form';\nimport Filter from '../Filter';\nimport ContactList from '../ContactsList';\n// import actions from '../../redux/Phonebook/phonebook-actions';\nimport s from './App.module.css';\n\nfunction App() {\n  // const [contacts, setContacts] = useState(() => {\n  //   return JSON.parse(\n  //     window.localStorage.getItem('contacts') ?? initialContacts,\n  //   );\n  // });\n  // const [filter, setFilter] = useState('');\n\n  // const formSubmitHandler = data => {\n  //   const comparableElement = contacts.some(\n  //     element => element.name.toLowerCase() === data.name.toLowerCase(),\n  //   );\n  //   if (comparableElement) {\n  //     return alert('contact is already in the directory');\n  //   }\n  // };\n\n  // const changeFilter = e => {\n  //   setFilter(e.target.value);\n  // };\n\n  // const getVisibleContact = () => {\n  //   const contactFilter = filter.toLowerCase();\n  //   return contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(contactFilter),\n  //   );\n  // };\n\n  // const deleteContact = contactId => {\n  //   setContacts(contacts.filter(contact => contact.id !== contactId));\n  // };\n\n  // useEffect(() => {\n  //   window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  // }, [contacts]);\n\n  return (\n    <Container>\n      <h1 className={s.title}>Phonebook</h1>\n      <Form />\n      <Filter />\n      <h2 className={s.contactTitle}>Contacts</h2>\n      <ContactList />\n    </Container>\n  );\n}\n// const mapStateToProps = state => {\n//   return {\n//     contacts: state,\n//   };\n// };\n// const mapDispatchToProps = dispatch => ({\n//   addNote: text => dispatch(actions.addContact(text)),\n// });\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import { PersistGate } from 'redux-persist/integration/react';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\n// import store from './redux/store';\r\nimport App from './components/App';\r\n// console.log(store.getState());\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading={<h2>loading</h2>} persistor={persistor}> */}\r\n      <App />\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}