{"version":3,"sources":["components/Form/Form.module.css","components/Filter/Filter.module.css","components/Contact/Contact.module.css","components/ContactsList/ContactsList.module.css","components/App/App.module.css","components/Container/Container.module.css","redux/Phonebook/PhonebookType.js","redux/Phonebook/PhonebookReduser.js","redux/store.js","components/Container/Container.js","components/Form/Form.js","components/Filter/Filter.js","components/Contact/Contact.js","components/ContactsList/ContactsList.js","components/App/App.js","index.js"],"names":["module","exports","SUBMIT","CHANGE_FILTER","DELETE","phonebookReducer","combineReducers","contact","state","initialContacts","type","payload","comparableElement","some","element","name","toLowerCase","alert","newArrAfterDel","filter","elem","id","rootReducer","phonebook","store","createStore","composeWithDevTools","Container","children","className","s","container","Form","onSubmit","useState","setName","number","setNumber","handleInputChange","e","target","value","reset","form","preventDefault","uuidv4","label","onChange","input","pattern","title","required","button","btnText","Filter","text","Contact","propType","PropTypes","string","isRequired","ContactsList","contacts","onDeleteContact","map","item","onClick","App","JSON","parse","window","localStorage","getItem","setContacts","setFilter","useEffect","setItem","stringify","data","contactTitle","contactFilter","includes","getVisibleContact","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,MAAQ,oBAAoB,OAAS,qBAAqB,QAAU,wB,0SCA5ID,EAAOC,QAAU,CAAC,KAAO,qBAAqB,MAAQ,wB,gBCAtDD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,OAAS,0B,gBCAxDD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,OAAS,+B,gBCA7DD,EAAOC,QAAU,CAAC,MAAQ,mBAAmB,aAAe,4B,kBCA5DD,EAAOC,QAAU,CAAC,UAAY,+B,2ICDjBC,EAAS,mBACTC,EAAgB,yBAChBC,EAAS,mB,QCuChBC,EAAmBC,0BAAgB,CACvCC,QA9BqB,WAAsD,IAArDC,EAAoD,mEAAxCC,GAAwC,yCAApBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC5D,OAAQD,GACN,KAAKR,EACH,IAAIU,EAAoBJ,EAAMK,MAC5B,SAAAC,GAAO,OAAIA,EAAQC,KAAKC,gBAAkBL,EAAQK,iBAEpD,OAAIJ,EACI,GAAN,mBAAWJ,GAAX,CAAkBG,KAElBM,MAAM,wCACCT,GAGX,KAAKJ,EACH,IAAIc,EAAiBV,EAAMW,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAOV,KACtD,OAAO,YAAIO,GAEb,QACE,OAAOV,IAaXW,OAVoB,WAAoC,IAAnCX,EAAkC,uDAA1B,GAA0B,yCAApBE,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACzC,OAAQD,IACDP,EACIQ,EAEAH,KAOEH,ICxCTiB,EAAchB,0BAAgB,CAClCiB,UAAWlB,IAIEmB,EAFDC,sBAAYH,EAAaI,iC,+BCNxB,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,I,4BCExB,SAASI,EAAT,GAA6B,IAAbC,EAAY,EAAZA,SAC7B,EAAwBC,mBAAS,IAAjC,mBAAOnB,EAAP,KAAaoB,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeC,EAAf,KAEMC,EAAoB,SAAAC,GACxB,MAAwBA,EAAEC,OAAlBzB,EAAR,EAAQA,KAAM0B,EAAd,EAAcA,MACd,OAAQ1B,GACN,IAAK,OACHoB,EAAQM,GACR,MACF,IAAK,SACHJ,EAAUI,GACV,MACF,QACE,SAkBAC,EAAQ,WACZP,EAAQ,IACRE,EAAU,KAGZ,OACE,uBAAMR,UAAWC,IAAEa,KAAMV,SAhBN,SAAAM,GACnBA,EAAEK,iBACF,IAAMrC,EAAU,CACdc,GAAIwB,cACJ9B,OACAqB,UAEFH,EAAS1B,GACTmC,KAQA,UACE,wBAAOb,UAAWC,IAAEgB,MAApB,iBAEE,uBACEC,SAAUT,EACVG,MAAO1B,EACPc,UAAWC,IAAEkB,MACbtC,KAAK,OACLK,KAAK,OACLkC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,wBAAOtB,UAAWC,IAAEgB,MAApB,kBAEE,uBACEL,MAAOL,EACPP,UAAWC,IAAEkB,MACbD,SAAUT,EACV5B,KAAK,MACLK,KAAK,SACLkC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,wBAAQtB,UAAWC,IAAEsB,OAAQ1C,KAAK,SAAlC,SACE,sBAAMmB,UAAWC,IAAEuB,QAAnB,gC,qBCpEO,SAASC,EAAT,GAAsC,IAApBb,EAAmB,EAAnBA,MAAOM,EAAY,EAAZA,SACtC,OACE,wBAAOlB,UAAWC,IAAEyB,KAApB,kCAEE,uBACE1B,UAAWC,IAAEW,MACb/B,KAAK,OACL+B,MAAOA,EACPM,SAAUA,O,qCCTH,SAASS,EAAT,GAAoC,IAAjBzC,EAAgB,EAAhBA,KAAMqB,EAAU,EAAVA,OACtC,OACE,qCACE,uBAAMP,UAAWC,IAAEf,KAAnB,UAA0BA,EAA1B,OACA,sBAAMc,UAAWC,IAAEM,OAAnB,SAA4BA,OAIlCoB,EAAQC,SAAW,CACjB1C,KAAM2C,IAAUC,OAAOC,WACvBxB,OAAQsB,IAAUtB,OAAOwB,Y,qBCRZ,SAASC,EAAT,GAAsD,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,gBAC/C,OACE,6BACGD,EAASE,KAAI,gBAAGjD,EAAH,EAAGA,KAAMqB,EAAT,EAASA,OAAQf,EAAjB,EAAiBA,GAAjB,OACZ,qBAAIQ,UAAWC,IAAEmC,KAAjB,UACE,cAACT,EAAD,CAASzC,KAAMA,EAAMqB,OAAQA,IAC7B,wBACEP,UAAWC,IAAEsB,OACb1C,KAAK,SACLwD,QAAS,kBAAMH,EAAgB1C,IAHjC,sBAF0BA,Q,qBCoDrB8C,MApDf,WACE,MAAgCjC,oBAAS,WAAO,IAAD,EAC7C,OAAOkC,KAAKC,MAAL,UACLC,OAAOC,aAAaC,QAAQ,mBADvB,QACsC/D,MAF/C,mBAAOqD,EAAP,KAAiBW,EAAjB,KAKA,EAA4BvC,mBAAS,IAArC,mBAAOf,EAAP,KAAeuD,EAAf,KAgCA,OAJAC,qBAAU,WACRL,OAAOC,aAAaK,QAAQ,WAAYR,KAAKS,UAAUf,MACtD,CAACA,IAGF,eAACnC,EAAD,WACE,oBAAIE,UAAWC,IAAEoB,MAAjB,uBACA,cAAClB,EAAD,CAAMC,SAjCgB,SAAA6C,GAIxB,GAH0BhB,EAASjD,MACjC,SAAAC,GAAO,OAAIA,EAAQC,KAAKC,gBAAkB8D,EAAK/D,KAAKC,iBAGpD,OAAOC,MAAM,uCAGfwD,EAAY,GAAD,mBAAKX,GAAL,CAAegB,QA0BxB,cAACxB,EAAD,CAAQb,MAAOtB,EAAQ4B,SAvBN,SAAAR,GACnBmC,EAAUnC,EAAEC,OAAOC,UAuBjB,oBAAIZ,UAAWC,IAAEiD,aAAjB,sBACA,cAAC,EAAD,CACEjB,SAtBoB,WACxB,IAAMkB,EAAgB7D,EAAOH,cAC7B,OAAO8C,EAAS3C,QAAO,SAAAZ,GAAO,OAC5BA,EAAQQ,KAAKC,cAAciE,SAASD,MAmBxBE,GACVnB,gBAhBgB,SAAAoB,GACpBV,EAAYX,EAAS3C,QAAO,SAAAZ,GAAO,OAAIA,EAAQc,KAAO8D,aChC1DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU9D,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJ+D,SAASC,eAAe,W","file":"static/js/main.9c42b534.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2VHn1\",\"label\":\"Form_label__1Du1J\",\"input\":\"Form_input__2XPkp\",\"button\":\"Form_button__DdiDB\",\"btnText\":\"Form_btnText__1XWEx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__BAiYD\",\"value\":\"Filter_value__2WEyA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Contact_name__3Kt8W\",\"number\":\"Contact_number__2BHeS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsList_item__Rb1R0\",\"button\":\"ContactsList_button__5iFBQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__3gDbG\",\"contactTitle\":\"App_contactTitle__29T5X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3IfuB\"};","export const SUBMIT = 'phonebook/submit';\r\nexport const CHANGE_FILTER = 'phonebook/changeFilter';\r\nexport const DELETE = 'phonebook/delete';\r\nexport const VISIBLE_CONTACTS = 'phonebook/visibleContacts';\r\n","import { combineReducers } from 'redux';\r\nimport { SUBMIT, CHANGE_FILTER, DELETE } from './PhonebookType';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n// import { submit, deleteContact, changeFilter } from './PhonebookActions';\r\nimport initialContacts from '../../contacts.json';\r\n\r\nconst phonebookState = {\r\n  contacts: {\r\n    items: [],\r\n    filter: '',\r\n  },\r\n};\r\nconst contactReducer = (state = [...initialContacts], { type, payload }) => {\r\n  switch (type) {\r\n    case SUBMIT: {\r\n      let comparableElement = state.some(\r\n        element => element.name.toLowerCase() === payload.toLowerCase(),\r\n      );\r\n      if (comparableElement) {\r\n        return [...state, payload];\r\n      } else {\r\n        alert('Contact is already in the directory!');\r\n        return state;\r\n      }\r\n    }\r\n    case DELETE: {\r\n      let newArrAfterDel = state.filter(elem => elem.id !== payload);\r\n      return [...newArrAfterDel];\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst filterReducer = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case CHANGE_FILTER:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst phonebookReducer = combineReducers({\r\n  contact: contactReducer,\r\n  filter: filterReducer,\r\n});\r\nexport default phonebookReducer;\r\n","import { createStore } from 'redux';\r\nimport { combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport phonebookReducer from './Phonebook/PhonebookReduser';\r\n\r\nconst rootReducer = combineReducers({\r\n  phonebook: phonebookReducer,\r\n});\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './Form.module.css';\nimport PropTypes from 'prop-types'; // ES6\n\nexport default function Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  // const handlerInputChange = e => {\n  //   setNumber(e.target.value);\n  // };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    onSubmit(contact);\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          onChange={handleInputChange}\n          value={name}\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Phone\n        <input\n          value={number}\n          className={s.input}\n          onChange={handleInputChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        <span className={s.btnText}> Add contacts</span>\n      </button>\n    </form>\n  );\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <label className={s.text}>\n      Find contacts by name\n      <input\n        className={s.value}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport s from './Contact.module.css';\nexport default function Contact({ name, number }) {\n  return (\n    <>\n      <span className={s.name}>{name}:</span>\n      <span className={s.number}>{number}</span>\n    </>\n  );\n}\nContact.propType = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Contact from '../Contact';\nimport s from './ContactsList.module.css';\n\nexport default function ContactsList({ contacts, onDeleteContact }) {\n  return (\n    <ul>\n      {contacts.map(({ name, number, id }) => (\n        <li className={s.item} key={id}>\n          <Contact name={name} number={number} />\n          <button\n            className={s.button}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport Container from '../Container';\nimport Form from '../Form';\nimport Filter from '../Filter';\nimport ContactList from '../ContactsList';\nimport initialContacts from '../../contacts.json';\nimport s from './App.module.css';\n\nfunction App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(\n      window.localStorage.getItem('contacts') ?? initialContacts,\n    );\n  });\n  const [filter, setFilter] = useState('');\n\n  const formSubmitHandler = data => {\n    const comparableElement = contacts.some(\n      element => element.name.toLowerCase() === data.name.toLowerCase(),\n    );\n    if (comparableElement) {\n      return alert('contact is already in the directory');\n    }\n\n    setContacts([...contacts, data]);\n  };\n\n  const changeFilter = e => {\n    setFilter(e.target.value);\n  };\n\n  const getVisibleContact = () => {\n    const contactFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(contactFilter),\n    );\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <Container>\n      <h1 className={s.title}>Phonebook</h1>\n      <Form onSubmit={formSubmitHandler} />\n      <Filter value={filter} onChange={changeFilter} />\n      <h2 className={s.contactTitle}>Contacts</h2>\n      <ContactList\n        contacts={getVisibleContact()}\n        onDeleteContact={deleteContact}\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport store from './redux/store';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}